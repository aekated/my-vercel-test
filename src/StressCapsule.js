import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import './App.css';

const emotionSupportMap = {
  'üò° –ó–ª–æ—Å—Ç—å': [
    'üí• –ü–æ—Ä–≤–∏ –±—É–º–∞–∂–∫—É –Ω–∞ –º–µ–ª–∫–∏–µ –∫—É—Å–æ—á–∫–∏',
    'üèÉ‚Äç‚ôÇÔ∏è –°–¥–µ–ª–∞–π 10 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π',
    'üò§ –í—ã–¥–æ—Ö–Ω–∏ –≥–Ω–µ–≤ –≤ –ø–æ–¥—É—à–∫—É',
    '‚úçÔ∏è –ù–∞–ø–∏—à–∏, –∑–∞ —á—Ç–æ —Ç—ã –∑–ª–∏—à—å—Å—è ‚Äî –∏ —Å–æ–∂–≥–∏ —ç—Ç–æ (–∏–ª–∏ —É–¥–∞–ª–∏)'
  ],
  'üò∞ –¢—Ä–µ–≤–æ–≥–∞': [
    'ü´Å –°–¥–µ–ª–∞–π —Ç–µ—Ö–Ω–∏–∫—É –¥—ã—Ö–∞–Ω–∏—è 4-7-8',
    'üìã –°–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å',
    'üìû –ü–æ–∑–≤–æ–Ω–∏ –¥—Ä—É–≥—É –∏–ª–∏ –ø–æ–≥–æ–≤–æ—Ä–∏ —Å –∫–µ–º-—Ç–æ',
    'üéµ –í–∫–ª—é—á–∏ —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â—É—é –º—É–∑—ã–∫—É –Ω–∞ 3 –º–∏–Ω—É—Ç—ã'
  ],
  'üò∂ –ü—É—Å—Ç–æ—Ç–∞': [
    'üåü –°–¥–µ–ª–∞–π —á—Ç–æ-—Ç–æ –¥–æ–±—Ä–æ–µ –¥–ª—è —Å–µ–±—è ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —á–∞–π',
    'üõè –ü—Ä–æ—Å—Ç–æ –ø–æ–ª–µ–∂–∏ –∏ –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –Ω–∞ 5 –º–∏–Ω—É—Ç',
    'üì∑ –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Ñ–æ—Ç–æ —Å —Ç—ë–ø–ª—ã–º–∏ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏',
    'üß∏ –í–æ–∑—å–º–∏ –≤ —Ä—É–∫–∏ —á—Ç–æ-—Ç–æ –º—è–≥–∫–æ–µ –∏ –ø—Ä–∏—è—Ç–Ω–æ–µ'
  ],
  'üò¢ –ì—Ä—É—Å—Ç—å': [
    'üñå –ù–∞—Ä–∏—Å—É–π, –∫–∞–∫–∞—è —É —Ç–µ–±—è –≥—Ä—É—Å—Ç—å (–≤ —Ü–≤–µ—Ç–µ)',
    'üëÇ –ü–æ—Å–ª—É—à–∞–π –æ–¥–Ω—É –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—é',
    'üíå –ù–∞–ø–∏—à–∏ —Å–µ–±–µ –ø–∏—Å—å–º–æ –æ—Ç –¥—Ä—É–≥–∞',
    'üìñ –ü—Ä–æ—á—Ç–∏ –∏–ª–∏ –≤—Å–ø–æ–º–Ω–∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â—É—é —Ü–∏—Ç–∞—Ç—É'
  ]
};

export default function StressCapsule() {
  const [step, setStep] = useState(1);
  const [message, setMessage] = useState('');
  const [emotion, setEmotion] = useState('');
  const [result, setResult] = useState('');
  const [history, setHistory] = useState([]);

  useEffect(() => {
    const saved = JSON.parse(localStorage.getItem('stressCapsuleHistory')) || [];
    setHistory(saved);
  }, []);

  useEffect(() => {
    localStorage.setItem('stressCapsuleHistory', JSON.stringify(history));
  }, [history]);

  const handleSubmit = () => {
    const supportList = emotionSupportMap[emotion] || [];
    const randomSupport = supportList[Math.floor(Math.random() * supportList.length)];
    setResult(randomSupport);
    setStep(3);
    setHistory(prev => [
      ...prev,
      { message, emotion, support: randomSupport, time: new Date().toLocaleString() }
    ]);
  };

  const reset = () => {
    setStep(1);
    setMessage('');
    setEmotion('');
    setResult('');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-100 via-sky-100 to-purple-200 flex items-center justify-center px-4 py-8">
      <div className="flex flex-col items-center w-full max-w-md gap-6">
        <motion.h1
          className="text-4xl font-bold text-center text-blue-900 drop-shadow fade-in"
          initial={{ y: -40, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
        >
          üíä –ö–∞–ø—Å—É–ª–∞ –°—Ç—Ä–µ—Å—Å–∞
        </motion.h1>

        {step === 1 && (
          <motion.div
            className="bg-white/90 shadow-xl rounded-2xl p-6 w-full fade-in"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
          >
            <p className="text-gray-800 mb-2">üìù –ß—Ç–æ —Ç–µ–±—è —Ç—Ä–µ–≤–æ–∂–∏—Ç?</p>
            <textarea
              className="w-full p-2 border rounded-md focus:outline-none focus:ring"
              placeholder="–ù–∞–ø–∏—à–∏ —Å—é–¥–∞..."
              value={message}
              onChange={(e) => setMessage(e.target.value)}
            />
            <button
              className="mt-4 w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition"
              onClick={() => setStep(2)}
              disabled={!message.trim()}
            >
              –î–∞–ª–µ–µ ‚û°Ô∏è
            </button>
          </motion.div>
        )}

        {step === 2 && (
          <motion.div
            className="bg-white/90 shadow-xl rounded-2xl p-6 w-full fade-in"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
          >
            <p className="text-gray-800 mb-4">ü§î –ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?</p>
            <div className="grid grid-cols-2 gap-2">
              {Object.keys(emotionSupportMap).map((e) => (
                <button
                  key={e}
                  onClick={() => setEmotion(e)}
                  className={`py-2 px-4 rounded-md transition ${
                    emotion === e
                      ? 'bg-blue-600 text-white'
                      : 'bg-blue-100 text-blue-800 hover:bg-blue-200'
                  }`}
                >
                  {e}
                </button>
              ))}
            </div>
            <button
              className="mt-4 w-full bg-green-500 text-white py-2 rounded-md hover:bg-green-600 transition"
              onClick={handleSubmit}
              disabled={!emotion}
            >
              –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É üíå
            </button>
          </motion.div>
        )}

        {step === 3 && (
          <motion.div
            className="bg-white/90 shadow-xl rounded-2xl p-6 w-full fade-in"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
          >
            <p className="text-gray-700 text-lg">üí¨ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è(–∞—Å—å)</p>
            <p className="text-xl font-semibold mt-4">üéÅ –¢–≤–æ—è –º–∏–Ω–∏-–∑–∞–¥–∞—á–∫–∞:</p>
            <p className="mt-2 text-blue-700 text-lg">{result}</p>
            <button
              className="mt-6 w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 transition"
              onClick={reset}
            >
              –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ üîÅ
            </button>
          </motion.div>
        )}

        {history.length > 0 && (
          <motion.div
            className="bg-white/70 backdrop-blur-md shadow-md rounded-xl p-4 w-full fade-in"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
          >
            <h2 className="text-lg font-semibold mb-3 text-blue-900">üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:</h2>
            <ul className="space-y-3 text-sm text-gray-700">
              {history.slice(-3).reverse().map((entry, index) => (
                <li
                  key={index}
                  className="bg-blue-50/80 p-4 rounded-xl shadow-sm border border-blue-100"
                >
                  <p>üïí <span className="font-medium">{entry.time}</span></p>
                  <p>üí¨ <span className="italic">{entry.message || '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}</span></p>
                  <p>üß† {entry.emotion}</p>
                  <p>üéØ {entry.support}</p>
                </li>
              ))}
            </ul>
          </motion.div>
        )}
      </div>
    </div>
  );
}
